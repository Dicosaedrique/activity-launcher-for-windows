@using System.Management.Automation;
@using FastWorkspace.Domain.Common;
@using FastWorkspace.Domain.Jobs;

@inject IWorkspaceStore WorkspaceStore
@inject IAppConfiguration AppConfiguration
@inject NavigationManager Navigation

@attribute [Route(Routes.ConfigurationPage)]

<h1>Configuration</h1>

@if (_firstLaunch)
{
    @* todo: add a better instruction *@
    <h3>Welcome to Fast Workspace! Please configure your app before using it.</h3>
}

<div>
    <h5>
        <FluentIcon Name="@FluentIcons.LocalLanguage" Size="@IconSize.Size24" Variant="@IconVariant.Filled" Color="@Color.Neutral" /> Language
    </h5>
    <FluentRadioGroup TValue="Language" Name="language" @bind-Value="_language">
        <FluentRadio Value="Language.English">English</FluentRadio>
        <FluentRadio Value="Language.French">Français</FluentRadio>
    </FluentRadioGroup>
</div>

<div>
    <h5>
        <FluentIcon Name="@FluentIcons.DarkTheme" Size="@IconSize.Size24" Variant="@IconVariant.Filled" Color="@Color.Neutral" /> Theme
    </h5>
    <FluentRadioGroup TValue="Theme" Name="language" @bind-Value="_theme">
        <FluentRadio Value="Theme.Light">Light</FluentRadio>
        <FluentRadio Value="Theme.Dark">Dark</FluentRadio>
    </FluentRadioGroup>
</div>

<div>
    <h5>
        <FluentIcon Name="@FluentIcons.Folder" Size="@IconSize.Size24" Variant="@IconVariant.Filled" Color="@Color.Neutral" /> Application Data Folder (required)
    </h5>
    <p>The application will use the provided folder to save the data (workspaces, ...)</p>
    <FolderPickerInput Label="Select a folder" @bind-FolderPath="_fileStorageDirectoryPath" />
</div>

<div>
    <FluentButton Appearance="Appearance.Accent" Disabled="string.IsNullOrWhiteSpace(_fileStorageDirectoryPath)" @onclick="OnSubmit">Save</FluentButton>
    @if(_error != null)
    {
        <p>@_error</p>
    }
</div>

@code {
    private bool _firstLaunch;
    private Language _language;
    private Theme _theme;
    private string? _fileStorageDirectoryPath;

    private string? _error;

    protected override void OnInitialized()
    {
        _language = AppConfiguration.GetLanguage();
        _theme = AppConfiguration.GetTheme();
        _fileStorageDirectoryPath = AppConfiguration.GetFileStorageDirectoryPath();
        _firstLaunch = _fileStorageDirectoryPath == null;
    }

    private void OnSubmit()
    {
        if (string.IsNullOrWhiteSpace(_fileStorageDirectoryPath))
        {
            _error = "Please choose a folder for this applications data!";
        }

        if (AppConfiguration.SetFileStorageDirectoryPath(_fileStorageDirectoryPath))
        {
            WorkspaceStore.SetupStore();
            AppConfiguration.SetLanguage(_language);
            AppConfiguration.SetTheme(_theme);
            Navigation.NavigateTo(Routes.HomePage, replace: true);
        }
        else
        {
            _error = "Please choose an existing folder for this applications data!";
        }
    }
}



