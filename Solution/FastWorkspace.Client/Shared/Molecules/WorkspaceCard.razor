@inject IStringLocalizer<AppLocales> Localize
@inject WorkspaceController WorkspaceController

<MudCard Elevation="_elevation" onclick="@Edit" onmouseover="@MouseEnter" onmouseout="@MouseLeave" Style="cursor: pointer; width: 280px;">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6" Style="font-size: 1.2rem; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; max-width: 195px;" title="@Workspace.Name">@Workspace.Name</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon="@Icons.Material.Filled.PlayArrow" Size="Size.Large" Color="Color.Success" OnClick="RunScript" aria-label="execute script" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <MudText Class="mb-2">
            @if (!string.IsNullOrWhiteSpace(Workspace.Description))
            {
                @Workspace.Description
            }
            else
            {
                <span>&nbsp;</span>
            }
            </MudText>
    </MudCardContent>
    <MudCardActions>
        <MudText Typo="Typo.body2" Class="ml-2" Style="font-size: 0.7rem;">@_humanizedLastModifiedDate</MudText>
        <div style="flex: 1;" />
        <MudIconButton Icon="@Icons.Material.Filled.Code" OnClick="OpenScript" aria-label="see script"></MudIconButton>
        <MudMenu Icon="@Icons.Material.Filled.MoreVert" aria-label="more options menu">
            <MudMenuItem Icon="@Icons.Material.Filled.Edit" OnClick="Edit">@Localize["Workspace.Card.EditMenu"]</MudMenuItem>
            <MudMenuItem Icon="@Icons.Material.Filled.ContentCopy" OnClick="Duplicate">@Localize["Workspace.Card.DuplicateMenu"]</MudMenuItem>
            <MudMenuItem Icon="@Icons.Material.Filled.Delete" OnClick="Delete">@Localize["Workspace.Card.DeleteMenu"]</MudMenuItem>
        </MudMenu>
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public Workspace Workspace { get; set; } = null!;

    private int _elevation = 2;

    private string _humanizedLastModifiedDate = string.Empty;

    protected override void OnParametersSet()
    {
        _humanizedLastModifiedDate = Workspace.LastModifiedDate.Humanize();
    }

    private void MouseEnter()
    {
        _elevation = 12;
    }

    private void MouseLeave()
    {
        _elevation = 2;
    }

    private async Task RunScript()
    {
        await WorkspaceController.PromptRunWorkspaceScript(Workspace, showReviewScriptOption: true);
    }

    private void OpenScript()
    {
        WorkspaceController.OpenWorkspaceScriptDialog(Workspace);
    }

    private void Edit()
    {
        WorkspaceController.OpenEditWorkspaceDialog(Workspace);
    }

    private async Task Duplicate()
    {
        await WorkspaceController.DuplicateWorkspace(Workspace);
    }

    private async Task Delete()
    {
        await WorkspaceController.PromptDeleteWorkspace(Workspace);
    }
}
