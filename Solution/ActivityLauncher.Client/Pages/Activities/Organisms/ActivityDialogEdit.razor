@inject ActivityController ActivityController
@inject IStringLocalizer<ActivityLocales> Localize

<MudDialog DisableSidePadding>
    <DialogContent>
        <div style="max-height: calc(100vh - 64px); overflow-y: scroll">
            <MudContainer Class="mb-16">
                <MudForm @ref="_form">
                    <MudStack Spacing="4">
                        <MudTextField T="string" Style="width: 50%;" @bind-Value="_activity.Name" Label="@Localize["Activity.Dialog.Name.Label"]" Required RequiredError="@Localize["Activity.Dialog.Name.RequiredError"]" Variant="Variant.Outlined" />
                        <MudTextField T="string" @bind-Value="_activity.Description" Label="@Localize["Activity.Dialog.Description.Label"]" Lines="2" Variant="Variant.Outlined" />
                    </MudStack>
                    <TasksDialogSection Class="mt-12" Activity="_activity" EditMode />
                    <MudStack Class="mt-12" Row Justify="Justify.FlexEnd">
                        <MudButton Variant="Variant.Filled" OnClick="MudDialog.Cancel">@Localize["Activity.Dialog.CancelButton"]</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit">@SubmitButtonLabel</MudButton>
                    </MudStack>
                </MudForm>
            </MudContainer>
        </div>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    public MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public Activity? ActivityToEdit { get; set; }

    private bool IsEdit => ActivityToEdit != null;

    private string SubmitButtonLabel => IsEdit ? Localize["Activity.Dialog.Edit.SubmitButton"] : Localize["Activity.Dialog.Create.SubmitButton"];

    private MudForm _form = null!;

    private Activity _activity = new();

    protected override void OnInitialized()
    {
        if (IsEdit)
        {
            _activity = ActivityToEdit!.Clone();
        }
    }

    private async Task Submit()
    {
        await _form.Validate();

        if (_form.IsValid)
        {
            if (string.IsNullOrWhiteSpace(_activity.Name)) return;

            _activity.Description = string.IsNullOrWhiteSpace(_activity.Description) ? null : _activity.Description;

            if (IsEdit) await Edit();
            else await Create();
        }
    }

    private async Task Create()
    {
        Activity.InitializeDemoTasks(_activity);

        var success = await ActivityController.CreateActivity(_activity);

        if (success)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
    }

    private async Task Edit()
    {
        var success = await ActivityController.UpdateActivity(_activity);

        if (success)
        {
            MudDialog.Close(DialogResult.Ok(true));
            MudDialog.CancelAll();
        }
    }
}
