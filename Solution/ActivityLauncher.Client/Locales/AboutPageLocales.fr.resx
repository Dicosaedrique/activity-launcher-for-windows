<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Credits.Description" xml:space="preserve">
    <value>Application open-source, gratuite, créée et maintenue par &lt;a class="mud-link mud-primary-text mud-link-underline-hover" href="https://dicosaedrique.fr"&gt;Dicosaedrique (Antoine Bouabana)&lt;/a&gt;. Le code source est disponible à sur &lt;a class="mud-link mud-primary-text mud-link-underline-hover" href="https://github.com/Dicosaedrique/activity-launcher-for-windows"&gt;GitHub (activity-launcher-for-windows)&lt;/a&gt;. Pour signaler un bug ou suggérer une amélioration, rendez-vous dans les &lt;a class="mud-link mud-primary-text mud-link-underline-hover" href="https://github.com/Dicosaedrique/activity-launcher-for-windows/issues"&gt;GitHub Issues&lt;/a&gt; du projet. Merci d'utiliser cette application et n'hésitez pas à la recommender autour de vous si vous la trouvez utile !</value>
  </data>
  <data name="Credits.Title" xml:space="preserve">
    <value>Créer par un dev pour des devs</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Activity Launcher pour Windows est l'outil ultime pour optimiser votre productivité sur ordinateur ! Gagnez un temps précieux en lançant instantanément des activités préconfigurées pour votre travail, développement, design, et bien plus encore. Créez des ensembles de tâches personnalisés pour rationaliser vos flux de travail et ouvrez rapidement des dossiers, des applications et des fichiers essentiels en un seul clic. Que vous soyez un développeur, un créatif ou simplement un utilisateur désireux d'optimiser son temps, cette application gratuite et exclusive sur Windows est faite pour vous !</value>
  </data>
  <data name="SellingPoint.1" xml:space="preserve">
    <value>&lt;b&gt;Créez des activités personnalisées :&lt;/b&gt; Regroupez des tâches liées pour des projets spécifiques et simplifiez votre routine quotidienne.</value>
  </data>
  <data name="SellingPoint.2" xml:space="preserve">
    <value>&lt;b&gt;Tâches polyvalentes :&lt;/b&gt; Ouvrez des dossiers, lancez des applications, accédez à des espaces de travail dans Visual Studio Code ou Windows Terminal, et bien plus encore.</value>
  </data>
  <data name="SellingPoint.3" xml:space="preserve">
    <value>&lt;b&gt;Flexibilité sans limites :&lt;/b&gt; Utilisez PowerShell pour créer des scripts personnalisés et exécuter des tâches adaptées à vos besoins uniques.</value>
  </data>
  <data name="SellingPoint.4" xml:space="preserve">
    <value>&lt;b&gt;Démarrage automatique :&lt;/b&gt; Configurez des activités pour s'exécuter au démarrage de votre ordinateur, offrant ainsi un lancement rapide de vos environnements de travail préférés.</value>
  </data>
  <data name="SellingPoint.5" xml:space="preserve">
    <value>&lt;b&gt;Convivialité avant tout :&lt;/b&gt; L'interface intuitive rend l'utilisation de l'application aussi simple que possible, même pour les débutants.</value>
  </data>
  <data name="Target.1.Description" xml:space="preserve">
    <value>Développeurs, cette application est conçue spécialement pour vous ! Lancez vos projets en un clin d'œil avec des activités prédéfinies pour les principales applications de développement, telles que Visual Studio Code et Windows Terminal. Améliorez votre flux de travail en regroupant des tâches courantes et en créant des scripts PowerShell personnalisés pour des processus complexes. Gagnez en efficacité et consacrez plus de temps à la création plutôt qu'à la configuration.</value>
  </data>
  <data name="Target.1.Title" xml:space="preserve">
    <value>Pour les développeurs</value>
  </data>
  <data name="Target.2.Description" xml:space="preserve">
    <value>Que vous soyez un professionnel, un étudiant ou un amateur passionné, Activity Launcher pour Windows est l'outil idéal pour améliorer votre productivité. Libérez-vous de la recherche fastidieuse de fichiers et d'applications en regroupant tout ce dont vous avez besoin dans des activités prédéfinies. Profitez d'un lancement rapide et sans effort pour vos tâches quotidiennes, que ce soit pour le travail, les loisirs ou les études.</value>
  </data>
  <data name="Target.2.Title" xml:space="preserve">
    <value>Mais aussi pour tous les utilisateurs Windows</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>À propos</value>
  </data>
</root>