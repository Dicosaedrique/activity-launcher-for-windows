<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About.Description" xml:space="preserve">
    <value>Application open-source, gratuite, créée et maintenue par &lt;a class="mud-link mud-primary-text mud-link-underline-hover" href="https://dicosaedrique.fr"&gt;Dicosaedrique (Antoine Bouabana)&lt;/a&gt;. Le code source est disponible à sur &lt;a class="mud-link mud-primary-text mud-link-underline-hover" href="https://github.com/Dicosaedrique/activity-launcher-for-windows"&gt;GitHub (activity-launcher-for-windows)&lt;/a&gt;. Pour signaler un bug ou suggérer une amélioration, rendez-vous dans les &lt;a class="mud-link mud-primary-text mud-link-underline-hover" href="https://github.com/Dicosaedrique/activity-launcher-for-windows/issues"&gt;GitHub Issues&lt;/a&gt; du projet. Merci d'utiliser cette application et n'hésitez pas à la recommender autour de vous si vous la trouvez utile !</value>
  </data>
  <data name="About.Title" xml:space="preserve">
    <value>Créer par un dev pour des devs</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Activity Launcher pour Windows est un outil conçu pour Windows et pour les développeurs ou utilisateurs avancés voulant accélérer leur flux de travail et activités sur leur machine. Créez des activités en quelques clics pour lancer toutes sortes de tâches rapidement ou au démarrage de votre machine. Quelques tâches prédéfinies sont disponibles mais l'application vous laisse la flexibilité de définir les tâches que vous voulez grâce à la puissance des scripts PowerShell.</value>
  </data>
  <data name="Disclaimer.Content" xml:space="preserve">
    <value>Cette application est conçue pour exécuter des créer et exécuter des scripts uniquement dans le répertoire spécifié dans la page de configuration. Cependant, l'utilisation des scripts par l'utilisateur est de sa propre responsabilité. Nous déclinons toute responsabilité pour les conséquences découlant de l'exécution des scripts fournis par l'utilisateur. Il est recommandé à l'utilisateur de faire preuve de prudence et de diligence lors de l'exécution de tout script, et de s'assurer de comprendre pleinement son fonctionnement et ses implications avant de le lancer (vous pouvez pour cela toujours vérifier le contenu du script généré avant de le lancer).</value>
  </data>
  <data name="Disclaimer.OptionalSoftware" xml:space="preserve">
    <value>Certaines tâches préconfigurées utilisent des applications telles que Windows Terminal ou Visual Studio Code pour fonctionner, cependant, leur installation n'est requise que si vous souhaitez exécuter ces tâches spécifiques.</value>
  </data>
  <data name="Disclaimer.Requirements" xml:space="preserve">
    <value>Pour que l'application fonctionne, vous devez avoir un version récente de PowerShell installé sur votre machine (requis).</value>
  </data>
  <data name="Disclaimer.Title" xml:space="preserve">
    <value>Avertissements</value>
  </data>
  <data name="Startup.Setup" xml:space="preserve">
    <value>Mise en place du lancement au démarrage</value>
  </data>
  <data name="Startup.Setup.Instructions" xml:space="preserve">
    <value>Pour que les activités puissent s'exécuter au démarrage, vous devez faire en sorte que le fichier &lt;i&gt;&lt;b&gt;{0}&lt;/b&gt;&lt;/i&gt; soit exécuté au lancement de Windows. Pour cela, vous pouvez simplement le copier/coller le fichier dans le repertoire que Windows utilise pour lancer des applications au démarage (ce dossier est spécifique à votre utilisateur, remplacez donc &lt;i&gt;{{YOUR_USER}}&lt;/i&gt; par votre nom d'utilisateur), le repertoire en question devrait être &lt;i&gt;&lt;b&gt;{1}&lt;/b&gt;&lt;/i&gt;.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>À propos</value>
  </data>
</root>