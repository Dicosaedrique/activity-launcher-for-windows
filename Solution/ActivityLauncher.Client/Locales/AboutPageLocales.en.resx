<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Credits.Description" xml:space="preserve">
    <value>Free open-source application, created and maintained by &lt;a class="mud-link mud-primary-text mud-link-underline-hover" href="https://dicosaedrique.fr"&gt;Dicosaedrique (Antoine Bouabana)&lt;/a&gt;. The source code is available on &lt;a class="mud-link mud-primary-text mud-link-underline-hover" href="https://github.com/Dicosaedrique/activity-launcher-for-windows"&gt;GitHub (activity-launcher-for-windows)&lt;/a&gt;. To report a bug or suggest an improvement, go to the &lt;a class="mud-link mud-primary-text mud-link-underline-hover" href="https://github.com/Dicosaedrique/activity- launcher-for-windows/issues"&gt;GitHub Issues&lt;/a&gt; of the project. Thank you for using this application and do not hesitate to recommend it around you if you find it useful!</value>
  </data>
  <data name="Credits.Title" xml:space="preserve">
    <value>Created by a dev for devs</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Activity Launcher for Windows is the ultimate tool to optimize your computer productivity! Save valuable time by instantly launching preconfigured activities for your work, development, design, and more. Create custom task sets to streamline your workflows and quickly open essential folders, apps, and files with a single click. Whether you are a developer, a creative or simply a user wishing to optimize his time, this free and exclusive application on Windows is made for you!</value>
  </data>
  <data name="SellingPoint.1" xml:space="preserve">
    <value>&lt;b&gt;Create custom activities:&lt;/b&gt; Group related tasks for specific projects and simplify your daily routine.</value>
  </data>
  <data name="SellingPoint.2" xml:space="preserve">
    <value>&lt;b&gt;Versatile Tasks:&lt;/b&gt; Open folders, launch apps, access workspaces in Visual Studio Code or Windows Terminal, and more.</value>
  </data>
  <data name="SellingPoint.3" xml:space="preserve">
    <value>&lt;b&gt;Unlimited flexibility:&lt;/b&gt; Use PowerShell to create custom scripts and perform tasks tailored to your unique needs.</value>
  </data>
  <data name="SellingPoint.4" xml:space="preserve">
    <value>&lt;b&gt;Autostart:&lt;/b&gt; Configure activities to run when your computer starts, providing a quick launch to your favorite work environments.</value>
  </data>
  <data name="SellingPoint.5" xml:space="preserve">
    <value>&lt;b&gt;User friendliness first:&lt;/b&gt; The intuitive interface makes using the app as easy as possible, even for beginners.</value>
  </data>
  <data name="Target.1.Description" xml:space="preserve">
    <value>Developers, this application is designed especially for you! Get your projects started in a snap with pre-built activities for major development apps, like Visual Studio Code and Windows Terminal. Improve your workflow by grouping common tasks and creating custom PowerShell scripts for complex processes. Gain efficiency and spend more time creating rather than configuring.</value>
  </data>
  <data name="Target.1.Title" xml:space="preserve">
    <value>For Developers</value>
  </data>
  <data name="Target.2.Description" xml:space="preserve">
    <value>Whether you are a professional, a student or a passionate hobbyist, Activity Launcher for Windows is the perfect tool to improve your productivity. Free yourself from the tedious search for files and applications by grouping everything you need into predefined activities. Enjoy a quick and effortless launch for your daily tasks, whether for work, play or study.</value>
  </data>
  <data name="Target.2.Title" xml:space="preserve">
    <value>Also for all Windows users</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>About</value>
  </data>
</root>